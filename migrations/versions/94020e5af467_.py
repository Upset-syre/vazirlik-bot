"""empty message

Revision ID: 94020e5af467
Revises: 
Create Date: 2023-05-31 14:13:08.648089

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '94020e5af467'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('application', 'sent')
    op.drop_column('application', 'created_at')
    op.drop_column('text', 'step8')
    op.drop_column('text', 'step9')
    op.drop_column('text', 'step5')
    op.drop_column('text', 'step6')
    op.drop_column('text', 'step7')
    op.drop_column('tuman', 'district_id')
    op.add_column('user', sa.Column('sex_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'user', 'sex', ['sex_id'], ['id'])
    op.create_foreign_key(None, 'user', 'mfy', ['mfy_id'], ['id'])
    op.create_foreign_key(None, 'user', 'tuman', ['tuman_id'], ['id'])
    op.drop_column('viloyat', 'region_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('viloyat', sa.Column('region_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_column('user', 'sex_id')
    op.add_column('tuman', sa.Column('district_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('text', sa.Column('step7', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('text', sa.Column('step6', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('text', sa.Column('step5', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('text', sa.Column('step9', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('text', sa.Column('step8', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('application', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('application', sa.Column('sent', sa.VARCHAR(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
